#!/bin/bash

# =========================================================================
# Script de P√≥s-Instala√ß√£o e Personaliza√ß√£o do GNOME (Ubuntu/Debian)
#
# O que este script faz:
# 1. Desativa o som de eventos do sistema.
# 2. Adiciona um segundo layout de teclado.
# 3. Altera atalhos do teclado.
# 4. Define um papel de parede personalizado.
# 5. Configura o comportamento da tecla Caps Lock.
# 6. Configura o Git para salvar credenciais via OAuth.
# 7. Adiciona suporte ao Flatpak e ao reposit√≥rio Flathub.
# 8. Instala o Gerenciador de Extens√µes (Extension Manager).
# =========================================================================

echo "üöÄ Iniciando a personaliza√ß√£o do ambiente GNOME..."
echo ""

echo "-> 1/8: Desativando o som de captura de tela e outros eventos..."
gsettings set org.gnome.desktop.sound event-sounds false
echo "    ‚úÖ Sons de eventos do sistema desativados."
echo ""

echo "-> 2/8: Configurando layouts de teclado..."
# Verifica a vari√°vel de ambiente $LANG que define o idioma/regi√£o
if [[ "$LANG" == "pt_BR"* ]]; then
    echo "    Idioma detectado: Portugu√™s (Brasil). Adicionando layout Ingl√™s (US)..."
    # A ordem dos layouts importa: o primeiro √© o principal.
    gsettings set org.gnome.desktop.input-sources sources "[('xkb', 'br'), ('xkb', 'us')]"
    echo "    ‚úÖ Layouts configurados: [br, us]"
elif [[ "$LANG" == "en"* ]]; then
    echo "    Idioma detectado: Ingl√™s. Adicionando layout Portugu√™s (Brasil)..."
    gsettings set org.gnome.desktop.input-sources sources "[('xkb', 'us'), ('xkb', 'br')]"
    echo "    ‚úÖ Layouts configurados: [us, br]"
else
    echo "    ‚ö†Ô∏è  Idioma do sistema n√£o √© 'pt_BR' ou 'en'. Pulando a configura√ß√£o de layouts."
fi
echo ""

echo "-> 3/8: Alterando atalhos do teclado..."
echo "    - Configurando 'Mudar layout' para 'Ctrl+Espa√ßo'..."
gsettings set org.gnome.desktop.wm.keybindings switch-input-source "['<Control>space']"
gsettings set org.gnome.desktop.wm.keybindings switch-input-source-backward "['<Control><Shift>space']"
echo "    - Configurando 'Captura de tela interativa' para 'Ctrl+Shift+S'..."
gsettings set org.gnome.settings-daemon.plugins.media-keys screenshot "['<Control><Shift>s']"
echo "    ‚úÖ Atalhos personalizados foram aplicados."
echo ""

echo "-> 4/8: Configurando o papel de parede..."
# Define o caminho relativo da imagem
WALLPAPER_RELATIVE_PATH="./wallpaper/bota_garrao_gpteco.png"

# Converte o caminho relativo para um caminho absoluto
WALLPAPER_ABSOLUTE_PATH=$(readlink -f "$WALLPAPER_RELATIVE_PATH")

# Verifica se o arquivo de imagem realmente existe no caminho absoluto
if [ -f "$WALLPAPER_ABSOLUTE_PATH" ]; then
    WALLPAPER_URI="file://$WALLPAPER_ABSOLUTE_PATH"
    echo "    - Aplicando imagem: $WALLPAPER_ABSOLUTE_PATH"
    gsettings set org.gnome.desktop.background picture-uri "$WALLPAPER_URI"
    gsettings set org.gnome.desktop.background picture-uri-dark "$WALLPAPER_URI"
    gsettings set org.gnome.desktop.background picture-options 'scaled'
    echo "    ‚úÖ Papel de parede aplicado com sucesso."
else
    echo "    ‚ö†Ô∏è  Aviso: O arquivo de papel de parede n√£o foi encontrado em '$WALLPAPER_ABSOLUTE_PATH'."
    echo "    ‚û°Ô∏è  Pulando esta etapa."
fi
echo ""

echo "-> 5/8: Configurando a tecla Caps Lock..."
CAPS_STATUS=$(gsettings get org.gnome.desktop.input-sources xkb-options)

if [[ "$CAPS_STATUS" == *"'caps:none'"* ]]; then
    echo "    ‚ÑπÔ∏è  Sua tecla Caps Lock j√° est√° desativada."
else
    echo "    ‚ÑπÔ∏è  Sua tecla Caps Lock est√° ativada."
    read -p "    Deseja desativ√°-la? (S/n) " -n 1 -r REPLY
    echo
    if [[ -z "$REPLY" || $REPLY =~ ^[Ss]$ ]]; then
        gsettings set org.gnome.desktop.input-sources xkb-options "['caps:none']"
        echo "    ‚úÖ Caps Lock foi DESATIVADO."
    else
        echo "    ‚û°Ô∏è  Nenhuma altera√ß√£o feita."
    fi
fi
echo ""

echo "-> 6/8: Configurando o Git Credential Helper (m√©todo OAuth)..."
PACKAGES_NEEDED=("git" "git-credential-oauth")
PACKAGES_TO_INSTALL=()

for pkg in "${PACKAGES_NEEDED[@]}"; do
    if ! dpkg -s "$pkg" &> /dev/null; then
        PACKAGES_TO_INSTALL+=("$pkg")
    fi
done

if [ ${#PACKAGES_TO_INSTALL[@]} -gt 0 ]; then
    echo "    ‚ÑπÔ∏è  Pacotes necess√°rios para o Git: ${PACKAGES_TO_INSTALL[*]}"
    read -p "    Deseja instal√°-los agora? (S/n) " -n 1 -r REPLY
    echo
    if [[ -z "$REPLY" || $REPLY =~ ^[Ss]$ ]]; then
        sudo apt-get update
        sudo apt-get install -y "${PACKAGES_TO_INSTALL[@]}"
        echo "    ‚úÖ Depend√™ncias instaladas."
    else
        echo "    ‚û°Ô∏è  Instala√ß√£o cancelada. Pulando a configura√ß√£o do Git."
    fi
fi
git config --global credential.helper oauth
echo "    ‚úÖ Credential Helper do Git configurado para usar OAuth."
echo ""

echo "-> 7/8: Configurando o suporte a Flatpak..."

# Verifica se o comando 'flatpak' j√° existe no sistema
if ! command -v flatpak &> /dev/null; then
    echo "   - O Flatpak n√£o foi encontrado. Instalando pacotes base..."
    sudo apt-get update
    sudo apt-get install -y flatpak gnome-software gnome-software-plugin-flatpak gnome-software-plugin-snap
    echo "   - Adicionando o reposit√≥rio Flathub (principal fonte de apps Flatpak)..."
    flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
    echo "   ‚úÖ Suporte a Flatpak configurado com sucesso."
else
    echo "   ‚ÑπÔ∏è  O Flatpak j√° est√° instalado. Verificando o reposit√≥rio Flathub..."
    # Garante que o reposit√≥rio Flathub est√° adicionado, mesmo que o flatpak j√° exista
    flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
    echo "   ‚úÖ Suporte a Flatpak verificado."
fi
echo ""

echo "-> 8/8: Instalando o Gerenciador de Extens√µes (Extension Manager)..."
# ID do aplicativo Extension Manager no Flathub
EXTENSION_MANAGER_ID="com.mattjakeman.ExtensionManager"

# Verifica se o Extension Manager j√° est√° instalado via Flatpak
if flatpak info "$EXTENSION_MANAGER_ID" &> /dev/null; then
    echo "   ‚ÑπÔ∏è  O Gerenciador de Extens√µes j√° est√° instalado."
else
    # Se n√£o estiver instalado, pergunta ao usu√°rio se ele deseja instalar
    echo "   üí° Para instalar e gerenciar extens√µes do GNOME (como a 'Dash to Dock'),"
    echo "      o 'Extension Manager' √© altamente recomendado."
    
    # -p: mostra o prompt | -n 1: l√™ apenas 1 caractere | -r: impede que barras invertidas sejam interpretadas
    read -p "   ‚ùì Deseja instalar o Extension Manager agora? [S/n] " resposta
    echo "" # Adiciona uma nova linha para melhor formata√ß√£o

    # Define 'S' (Sim) como padr√£o se o usu√°rio apenas pressionar Enter
    resposta=${resposta:-S}

    # Verifica se a resposta foi 's' ou 'S'
    if [[ "$resposta" =~ ^[Ss]$ ]]; then
        echo "   - Instalando o Gerenciador de Extens√µes via Flatpak..."
        flatpak install -y flathub "$EXTENSION_MANAGER_ID"
        echo "   ‚úÖ Gerenciador de Extens√µes instalado com sucesso."
        echo "   üí° Dica: Abra o novo aplicativo 'Extension Manager' para procurar e instalar extens√µes."
    else
        echo "   ‚û°Ô∏è  Instala√ß√£o do Gerenciador de Extens√µes pulada pelo usu√°rio."
    fi
fi
echo ""

echo "üéâ Configura√ß√£o conclu√≠da!"

echo "‚ö†Ô∏è  ‚ö†Ô∏è Continue a configuracao com Linux Toys: https://github.com/psygreg/linuxtoys ‚ö†Ô∏è  ‚ö†Ô∏è"
